#!/bin/sh
# shellcheck disable=SC2154,SC1090,SC2016,SC2140

export LC_ALL=en_US.utf-8

abspath() {
    _path="$1"
    if [ -n "${_path##/*}" ]; then
        _path="${2:-$PWD}/$1"
    fi
    echo "$_path"
}

abs_readlink() {
    for arg; do
        if [ -h "$arg" ]; then
            abspath "$(readlink "$arg")" "$(dirname "$arg")"
        else
            abspath "$arg"
        fi
    done
}

. "$(dirname "$(abs_readlink "$0")")/common-music.sh"

set -e

scriptdir="$(cd "$(dirname "$0")" && pwd)"
PATH="$scriptdir/../scripts:$PATH"

usage() {
    cat >&2 <<END
    ${0##*/} [options] [PLAYLIST_DIR]

    PLAYLIST_DIR defaults to $playlistdir

    Options:
    -h    Show this usage info
    -e    Write an extended m3u
END
    exit 2
}

playlistdir=./_Playlists
extm3u=
while getopts ep:h opt; do
    case "$opt" in
        e)
            extm3u=1
            ;;
        p)
            playlistdir="$OPTARG"
            if ! [ -d "$playlistdir" ]; then
                echo >&2 "Error: OUTPUT_DIR $playlistdir must be an existing directory"
                usage
            fi
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

list_playlists() {
    if [ $# -eq 0 ]; then
        find "$playlist_root" -type f
    else
        for arg; do
            echo "$arg"
        done
    fi
}

if [ $# -eq 0 ]; then
    playlist_root=../Playlists
else
    playlist_root=
fi

cd "$scriptdir"
mkdir -p "$playlistdir"
list_playlists "$@" | while read -r playlist; do
    if [ -n "$playlist_root" ]; then
        dir="$(dirname "${playlist#$playlist_root/}")"
    else
        dir=.
    fi
    destdir="$playlistdir/$dir"
    if [ "$dir" != "." ]; then
        rel="../$(echo "$dir/" | sed -e 's#[^/]*##g; s#/#../#g')"
    else
        rel=../
    fi
    echo >&2 "Processing $dir/${playlist##*/}.m3u8"
    mkdir -p "$destdir"
    rockuefort-gen-m3u -w ${extm3u:+-e} -r "$scriptdir/" -p "${rel%/}" -d "$destdir" "$playlist"
    if ! [ -e "$destdir/${playlist##*/}.m3u8" ]; then
        echo >&2 "No playlist emitted for $playlist, cleaning up"
        rmdir "$destdir" 2>/dev/null || :
    fi
done

if [ -e "$playlist_root/Random Single Tracks" ]; then
    echo >&2 "Processing Random Single Tracks.m3u8"
    find Single\ Tracks -type l \
        | sed -e 's#^#../#; s#/#\\#g' \
        | sort -R >"$playlistdir/Random Single Tracks.m3u8"
fi

if [ -e "$playlist_root/By Source" ]; then
    echo >&2 "Processing By Source playlists"
    TAB="$(printf '\t')"
    if command -v greadlink >/dev/null 2>&1; then
        readlink=greadlink
    else
        readlink=readlink
    fi

    mkdir -p "$playlistdir/By Source"
    rm -f "$playlistdir/By Source"/*
    music_find . \
        | sed -e 's#^\./##' \
        | xargs-paste "$readlink" -f \
        | sed -n -e 's#\([^'"$TAB"']*'"$TAB"'\)\(.*/By Source\)/\([^/]*\)/\(.*\)#\3'"$TAB"'\1\2/\3/\4#p' \
        | sort_tracks 3 4 \
        | cut -d"$TAB" -f1-2 \
        | while IFS="$TAB" read -r source link; do
            echo "../../$link" | tr '/' "\\" >>"$playlistdir/By Source/$source.m3u8"
        done
fi
