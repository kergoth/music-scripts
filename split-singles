#!/bin/sh

. "$(dirname "$0")/common-music.sh"

investigate_threshold=1
destdir=.
prefix=
albumsdir=${prefix}Albums
extrasdir="${prefix}Albums With Extra Tracks"
incompletedir="${prefix}Incomplete Albums"
singlesdir=${prefix}Singles
singletracksdir="${prefix}Single Tracks"
samplersdir="${prefix}Samplers"
# Genres that get their own toplevel directories to ease navigation
# Game and Soundtrack also get flattened, as I rarely browse them by artist
hoistedgenresdir="${prefix}%s Albums"
hoisted_genres="Game|Soundtrack|Christmas|Classical"
flattened_genres="Game|Soundtrack"
flattened_dirs="$samplersdir"

# Games with data tracks and amazon albums whose videos and booklets are
# counted in the track total. This blacklist only allows one track to be
# missing at this time.
incomplete_blacklist="Descent Mac Game Soundtrack|Shadow Warrior|Fantasy General|Stargunner Original Soundtrack|King's Quest VI Heir Today, Gone Tomorrow|Command & Conquer： Red Alert： Counterstrike|Command & Conquer： Tiberian Dawn： Covert Operations|Warcraft II： Tides of Darkness|Total Annihilation|Moto Racer|Return to Zork|Quake|Hexen II|.*\\[\\+video\\]|.*\\[\\+Digital Booklet\\]"
soundtrack_blacklist="Soundtrack For The Voices In My Head.*"

usage() {
    cat >&2 <<END
${0##*/} [options] LIBRARY_DIR [LIBRARY_DIR..]

Options:
    -i    Link tracks individually rather than album folders
    -H    Hard link tracks rather than soft link (only useful with -i)
END
    exit 2
}

individual=0
hard_link_individual=0
while getopts iHh opt; do
    case "$opt" in
        i)
            individual=1
            ;;
        H)
            hard_link_individual=1
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
    set -- .
fi

linkargs=
if [ $hard_link_individual -eq 0 ]; then
    linkargs="$linkargs -sr"
elif [ $individual -eq 0 ]; then
    echo >&2 "Warning: -H has no effect without -i"
fi

if which gln >/dev/null 2>&1; then
    alias link="gln $linkargs"
else
    alias link="ln $linkargs"
fi

for library_dir; do
    if [ "$(cd "$library_dir" && pwd -P)" = "$(pwd -P)" ]; then
        # Don't recurse into ourselves
        continue
    fi
    for dir in "$library_dir"/*/*/; do
        if [ ! -e "$dir" ]; then
            continue
        fi
        dir="${dir%/}"
        base="${dir##*/}"
        count="$(music_find "$dir" | wc -l)"
        if [ $count -lt 1 ]; then
            continue
        fi
        first="$(music_find "$dir" | head -n 1)"
        total="$(get_album_track_total "$dir/")"

        genre= albumgenre= releasetype=
        eval_common_metadata "$first" genre albumgenre releasetype
        genre="$(get_genre "$first" "$soundtrack_blacklist")"

        if [ -z "$total" ]; then
            if [ $count -gt 1 ]; then
                d="$albumsdir"
            else
                d="$singletracksdir"
            fi
        elif [ $count -eq $total ]; then
            if echo "$releasetype" | tr ',' ' ' | grep -qwi single \
                || [ $total -eq 1 ] || echo "$base" | grep -q Single; then
                d="$singlesdir"
            else
                d="$albumsdir"
            fi
        elif [ $count -gt $total ]; then
            # The most common case is multiple discs
            # find "$dir/" -not -name ._\* \( -iname \*.flac -o -iname \*mp3 -o -iname \*.m4a -o -iname \*.ogg \)
            d="$extrasdir"
        elif [ $total -eq 1 ]; then
            # Shouldn't be possible to get here
            echo >&2 "Error: total is 1, but count is less than 1"
            exit 1
            d="$singletracksdir"
        else
            if [ $count -gt "$investigate_threshold" ]; then
                if [ $count -eq $((total - 1)) ] && echo "$base" | grep -qEx "$incomplete_blacklist"; then
                    d="$albumsdir"
                else
                    # Possibly screwed up, or an incomplete album
                    d="$incompletedir"
                fi
            else
                d="$singletracksdir"
            fi
        fi

        rel="$(relpath "$dir" "$library_dir")"
        echo "$rel: $count / $total"
        if [ "$d" = "$singletracksdir" ]; then
            dest="$d"
            mkdir -p "$dest"
            find "$dir/" -not -name ._\* \( -iname \*.flac -o -iname \*mp3 -o -iname \*.m4a -o -iname \*.ogg \) \
                | while read -r fn; do
                    ext="${fn##*.}"
                    (
                        artist= title=
                        eval_common_metadata "$fn" artist title
                        if [ -z "$artist" ]; then
                            artist="[unknown]"
                        fi
                        newfn="$(fn_sanitize "$artist - $title.$ext")"
                        if [ -e "$dest/$newfn" ]; then
                            echo >&2 "Error: $dest/$newfn already exists, can't link from $dir"
                            continue
                        fi
                        link "$fn" "$dest/$newfn"
                    )
                done
        else
            dest=
            if [ -n "$hoisted_genres" ] || [ -n "$flattened_genres" ]; then
                if [ -n "$hoisted_genres" ] \
                    && echo "$genre" | grep -Eqx "$hoisted_genres"; then
                    d="$(printf "$hoistedgenresdir" "$genre")"
                fi
                if [ -n "$flattened_genres" ] \
                    && echo "$genre" | grep -Eqx "$flattened_genres"; then
                    dest="$d/$base"
                fi
            fi

            if echo "$base" | grep -wi sampler; then
                d="$samplersdir"
            fi

            if echo "$d" | grep -Eqx "$flattened_dirs"; then
                dest="$d/$base"
            elif [ -z "$dest" ]; then
                dest="$d/$rel"
            fi
            dest="$destdir/$dest"

            if [ $individual -eq 1 ]; then
                if [ -d "$dest" ]; then
                    echo >&2 "Error: $dest already exists, can't link from $dir"
                    continue
                fi
                mkdir -p "$dest"
                find "$dir/" -not -name ._\* \( -iname \*.flac -o -iname \*mp3 -o -iname \*.m4a -o -iname \*.ogg \) \
                    | while read -r fn; do
                        link "$fn" "$dest/"
                    done
            else
                dest_parent="$(dirname "$dest")"
                mkdir -p "$dest_parent"
                if [ -h "$dest" ]; then
                    if [ -d "$dest" ]; then
                        olddest="$(cd "$dest" && pwd -P)"
                    else
                        olddest="$(cd "$dest_parent" && abspath "$(readlink "$base")")"
                    fi
                    absdir="$(cd "$dir" && pwd -P)"
                    if [ "$olddest" != "$absdir" ]; then
                        echo >&2 "Error: $dest exists but points to $olddest, not $absdir"
                        continue
                    fi
                fi
                rm -f "$dest"
                link "$dir" "$dest"
            fi

        fi
    done
done
